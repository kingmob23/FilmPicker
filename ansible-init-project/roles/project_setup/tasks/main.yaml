---
- name: Create directory structure for specified modules
  file:
    path: "{{ playbook_dir }}/../../{{ project_name }}/{{ item }}"
    state: directory
  with_items: "{{ project_modules }}"
  when: "item in project_modules"

- name: Initialize frontend with Create React App
  command: npx create-react-app frontend
  args:
    chdir: "{{ playbook_dir }}/../../{{ project_name }}/frontend"
  when: "'frontend' in project_modules"

- name: Initialize poetry for backend
  command: poetry init --no-interaction
  args:
    chdir: "{{ playbook_dir }}/../../{{ project_name }}/backend"
  when: "'backend' in project_modules"

- name: Create backend structure
  file:
    path: "{{ playbook_dir }}/../../{{ project_name }}/backend/{{ item }}"
    state: directory
  with_items:
    - "api"
    - "business_logic"
  when: "'backend' in project_modules"

- name: Create default logic file
  copy:
    content: "# Add your business logic here"
    dest: "{{ playbook_dir }}/../../{{ project_name }}/backend/business_logic/logic.py"
  when: "'backend' in project_modules"

- name: Create default API file
  copy:
    content: "# Add your API logic here"
    dest: "{{ playbook_dir }}/../../{{ project_name }}/backend/api/__init__.py"
  when: "'backend' in project_modules"

- name: Install backend dependencies with Poetry
  command: poetry add fastapi sqlalchemy
  args:
    chdir: "{{ playbook_dir }}/../../{{ project_name }}/backend"
  when: "'backend' in project_modules"

- name: Install additional backend dependencies with Poetry
  command: poetry add {{ item }}
  with_items: "{{ additional_backend_dependencies }}"
  args:
    chdir: "{{ playbook_dir }}/../../{{ project_name }}/backend"
  when:
    - "'backend' in project_modules"
    - "additional_backend_dependencies is defined"
    - "additional_backend_dependencies | length > 0"

- name: Create .gitignore based on context
  template:
    src: gitignore.j2
    dest: "{{ playbook_dir }}/../../.gitignore"

- name: Initialize Git
  command: git init
  args:
    chdir: "{{ playbook_dir }}/../../"

- name: Git config author name for specific repo
  command: git config user.name "{{ username }}"
  args:
    chdir: "{{ playbook_dir }}/../../"

- name: Git config author email for specific repo
  command: git config user.email "{{ email }}"
  args:
    chdir: "{{ playbook_dir }}/../../"

- name: Set default branch to main
  command: git checkout -b main
  args:
    chdir: "{{ playbook_dir }}/../../"

- name: Create .gitkeep in the project root directory
  file:
    path: "{{ playbook_dir }}/../../.gitkeep"
    state: touch

- name: Add .gitkeep file to Git
  command: git add .gitkeep
  args:
    chdir: "{{ playbook_dir }}/../../"

- name: Make initial commit in main
  command: git commit -m "Initial commit"
  args:
    chdir: "{{ playbook_dir }}/../../"

- name: Create development branch
  command: git checkout -b development
  args:
    chdir: "{{ playbook_dir }}/../../"

- name: Remove .gitkeep file from the project root directory
  file:
    path: "{{ playbook_dir }}/../../.gitkeep"
    state: absent

- name: Add all files to Git
  command: git add .
  args:
    chdir: "{{ playbook_dir }}/../../"

- name: Set commit message
  set_fact:
    commit_message: >
      {{ 
        'Project initialized: ' +
        ('Frontend with React via create-react-app, ' if 'frontend' in project_modules else '') +
        ('Backend with FastAPI and business logic structure, and poetry for dependency management, ' if 'backend' in project_modules else '')
      }}

- name: Adjust commit message
  set_fact:
    final_commit_message: "{{ commit_message | trim | regex_replace(',\\s*$', '.') }}"

- name: Make initial commit
  command: git commit -m "{{ final_commit_message }}"
  args:
    chdir: "{{ playbook_dir }}/../../"

- name: Add remote repository
  command: git remote add origin {{ repository_url }}
  args:
    chdir: "{{ playbook_dir }}/../../"

- name: Push initial commit to remote repository
  command: git push -u origin development
  args:
    chdir: "{{ playbook_dir }}/../../"
